// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FeeWithdrawn extends ethereum.Event {
  get params(): FeeWithdrawn__Params {
    return new FeeWithdrawn__Params(this);
  }
}

export class FeeWithdrawn__Params {
  _event: FeeWithdrawn;

  constructor(event: FeeWithdrawn) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolCancelled extends ethereum.Event {
  get params(): PoolCancelled__Params {
    return new PoolCancelled__Params(this);
  }
}

export class PoolCancelled__Params {
  _event: PoolCancelled;

  constructor(event: PoolCancelled) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class PoolCreated extends ethereum.Event {
  get params(): PoolCreated__Params {
    return new PoolCreated__Params(this);
  }
}

export class PoolCreated__Params {
  _event: PoolCreated;

  constructor(event: PoolCreated) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get entryFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PoolEntered extends ethereum.Event {
  get params(): PoolEntered__Params {
    return new PoolEntered__Params(this);
  }
}

export class PoolEntered__Params {
  _event: PoolEntered;

  constructor(event: PoolEntered) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get prices(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get newEntry(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class PoolRewardTransfer extends ethereum.Event {
  get params(): PoolRewardTransfer__Params {
    return new PoolRewardTransfer__Params(this);
  }
}

export class PoolRewardTransfer__Params {
  _event: PoolRewardTransfer;

  constructor(event: PoolRewardTransfer) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get winner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Bet5Game__checkUpkeepResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }
}

export class Bet5Game__getPoolPositionResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromSignedBigInt(this.value1));
    return map;
  }
}

export class Bet5Game__getUserPoolEntriesResultValue0Struct extends ethereum.Tuple {
  get tokens(): Array<Address> {
    return this[0].toAddressArray();
  }

  get prices(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class Bet5Game__leaderboardResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromSignedBigIntArray(this.value1));
    return map;
  }
}

export class Bet5Game__poolsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: Address;
  value4: i32;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: Address,
    value4: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    return map;
  }
}

export class Bet5Game extends ethereum.SmartContract {
  static bind(address: Address): Bet5Game {
    return new Bet5Game("Bet5Game", address);
  }

  FEE(): i32 {
    let result = super.call("FEE", "FEE():(uint16)", []);

    return result[0].toI32();
  }

  try_FEE(): ethereum.CallResult<i32> {
    let result = super.tryCall("FEE", "FEE():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  MAX_ENTRY_COUNT(): i32 {
    let result = super.call("MAX_ENTRY_COUNT", "MAX_ENTRY_COUNT():(uint8)", []);

    return result[0].toI32();
  }

  try_MAX_ENTRY_COUNT(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "MAX_ENTRY_COUNT",
      "MAX_ENTRY_COUNT():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  MIN_ENTRY_COUNT(): i32 {
    let result = super.call("MIN_ENTRY_COUNT", "MIN_ENTRY_COUNT():(uint8)", []);

    return result[0].toI32();
  }

  try_MIN_ENTRY_COUNT(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "MIN_ENTRY_COUNT",
      "MIN_ENTRY_COUNT():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  NUM_USER_SELECTION(): i32 {
    let result = super.call(
      "NUM_USER_SELECTION",
      "NUM_USER_SELECTION():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_NUM_USER_SELECTION(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "NUM_USER_SELECTION",
      "NUM_USER_SELECTION():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  POOL_DURATION(): BigInt {
    let result = super.call("POOL_DURATION", "POOL_DURATION():(uint256)", []);

    return result[0].toBigInt();
  }

  try_POOL_DURATION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "POOL_DURATION",
      "POOL_DURATION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  POOL_ENTRY_INTERVAL(): BigInt {
    let result = super.call(
      "POOL_ENTRY_INTERVAL",
      "POOL_ENTRY_INTERVAL():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_POOL_ENTRY_INTERVAL(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "POOL_ENTRY_INTERVAL",
      "POOL_ENTRY_INTERVAL():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  POOL_START_INTERVAL(): BigInt {
    let result = super.call(
      "POOL_START_INTERVAL",
      "POOL_START_INTERVAL():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_POOL_START_INTERVAL(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "POOL_START_INTERVAL",
      "POOL_START_INTERVAL():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  WINNER_COUNT(): i32 {
    let result = super.call("WINNER_COUNT", "WINNER_COUNT():(uint8)", []);

    return result[0].toI32();
  }

  try_WINNER_COUNT(): ethereum.CallResult<i32> {
    let result = super.tryCall("WINNER_COUNT", "WINNER_COUNT():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  checkUpkeep(param0: Bytes): Bet5Game__checkUpkeepResult {
    let result = super.call("checkUpkeep", "checkUpkeep(bytes):(bool,bytes)", [
      ethereum.Value.fromBytes(param0)
    ]);

    return new Bet5Game__checkUpkeepResult(
      result[0].toBoolean(),
      result[1].toBytes()
    );
  }

  try_checkUpkeep(
    param0: Bytes
  ): ethereum.CallResult<Bet5Game__checkUpkeepResult> {
    let result = super.tryCall(
      "checkUpkeep",
      "checkUpkeep(bytes):(bool,bytes)",
      [ethereum.Value.fromBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Bet5Game__checkUpkeepResult(value[0].toBoolean(), value[1].toBytes())
    );
  }

  feeCollected(param0: Address): BigInt {
    let result = super.call("feeCollected", "feeCollected(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_feeCollected(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feeCollected",
      "feeCollected(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNetPoints(_poolId: BigInt, _address: Address): BigInt {
    let result = super.call(
      "getNetPoints",
      "getNetPoints(uint256,address):(int256)",
      [
        ethereum.Value.fromUnsignedBigInt(_poolId),
        ethereum.Value.fromAddress(_address)
      ]
    );

    return result[0].toBigInt();
  }

  try_getNetPoints(
    _poolId: BigInt,
    _address: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNetPoints",
      "getNetPoints(uint256,address):(int256)",
      [
        ethereum.Value.fromUnsignedBigInt(_poolId),
        ethereum.Value.fromAddress(_address)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPoolEntries(_poolId: BigInt): Array<Address> {
    let result = super.call(
      "getPoolEntries",
      "getPoolEntries(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(_poolId)]
    );

    return result[0].toAddressArray();
  }

  try_getPoolEntries(_poolId: BigInt): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getPoolEntries",
      "getPoolEntries(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(_poolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getPoolPosition(
    _poolId: BigInt,
    _address: Address
  ): Bet5Game__getPoolPositionResult {
    let result = super.call(
      "getPoolPosition",
      "getPoolPosition(uint256,address):(uint256,int256)",
      [
        ethereum.Value.fromUnsignedBigInt(_poolId),
        ethereum.Value.fromAddress(_address)
      ]
    );

    return new Bet5Game__getPoolPositionResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getPoolPosition(
    _poolId: BigInt,
    _address: Address
  ): ethereum.CallResult<Bet5Game__getPoolPositionResult> {
    let result = super.tryCall(
      "getPoolPosition",
      "getPoolPosition(uint256,address):(uint256,int256)",
      [
        ethereum.Value.fromUnsignedBigInt(_poolId),
        ethereum.Value.fromAddress(_address)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Bet5Game__getPoolPositionResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getPoolWinners(_poolId: BigInt): Array<Address> {
    let result = super.call(
      "getPoolWinners",
      "getPoolWinners(uint256):(address[3])",
      [ethereum.Value.fromUnsignedBigInt(_poolId)]
    );

    return result[0].toAddressArray();
  }

  try_getPoolWinners(_poolId: BigInt): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getPoolWinners",
      "getPoolWinners(uint256):(address[3])",
      [ethereum.Value.fromUnsignedBigInt(_poolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getUserPoolEntries(
    _poolId: BigInt,
    _address: Address
  ): Bet5Game__getUserPoolEntriesResultValue0Struct {
    let result = super.call(
      "getUserPoolEntries",
      "getUserPoolEntries(uint256,address):((address[5],int256[5]))",
      [
        ethereum.Value.fromUnsignedBigInt(_poolId),
        ethereum.Value.fromAddress(_address)
      ]
    );

    return result[0].toTuple() as Bet5Game__getUserPoolEntriesResultValue0Struct;
  }

  try_getUserPoolEntries(
    _poolId: BigInt,
    _address: Address
  ): ethereum.CallResult<Bet5Game__getUserPoolEntriesResultValue0Struct> {
    let result = super.tryCall(
      "getUserPoolEntries",
      "getUserPoolEntries(uint256,address):((address[5],int256[5]))",
      [
        ethereum.Value.fromUnsignedBigInt(_poolId),
        ethereum.Value.fromAddress(_address)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as Bet5Game__getUserPoolEntriesResultValue0Struct
    );
  }

  keeperPoolCounter(): BigInt {
    let result = super.call(
      "keeperPoolCounter",
      "keeperPoolCounter():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_keeperPoolCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "keeperPoolCounter",
      "keeperPoolCounter():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  leaderboard(_poolId: BigInt): Bet5Game__leaderboardResult {
    let result = super.call(
      "leaderboard",
      "leaderboard(uint256):(address[3],int256[3])",
      [ethereum.Value.fromUnsignedBigInt(_poolId)]
    );

    return new Bet5Game__leaderboardResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_leaderboard(
    _poolId: BigInt
  ): ethereum.CallResult<Bet5Game__leaderboardResult> {
    let result = super.tryCall(
      "leaderboard",
      "leaderboard(uint256):(address[3],int256[3])",
      [ethereum.Value.fromUnsignedBigInt(_poolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Bet5Game__leaderboardResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolCounter(): BigInt {
    let result = super.call("poolCounter", "poolCounter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_poolCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("poolCounter", "poolCounter():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pools(param0: BigInt): Bet5Game__poolsResult {
    let result = super.call(
      "pools",
      "pools(uint256):(uint256,uint256,uint256,address,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Bet5Game__poolsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toI32()
    );
  }

  try_pools(param0: BigInt): ethereum.CallResult<Bet5Game__poolsResult> {
    let result = super.tryCall(
      "pools",
      "pools(uint256):(uint256,uint256,uint256,address,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Bet5Game__poolsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toI32()
      )
    );
  }

  poolsEntered(param0: Address): BigInt {
    let result = super.call("poolsEntered", "poolsEntered(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_poolsEntered(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolsEntered",
      "poolsEntered(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelPoolCall extends ethereum.Call {
  get inputs(): CancelPoolCall__Inputs {
    return new CancelPoolCall__Inputs(this);
  }

  get outputs(): CancelPoolCall__Outputs {
    return new CancelPoolCall__Outputs(this);
  }
}

export class CancelPoolCall__Inputs {
  _call: CancelPoolCall;

  constructor(call: CancelPoolCall) {
    this._call = call;
  }

  get _poolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelPoolCall__Outputs {
  _call: CancelPoolCall;

  constructor(call: CancelPoolCall) {
    this._call = call;
  }
}

export class CheckUpkeepCall extends ethereum.Call {
  get inputs(): CheckUpkeepCall__Inputs {
    return new CheckUpkeepCall__Inputs(this);
  }

  get outputs(): CheckUpkeepCall__Outputs {
    return new CheckUpkeepCall__Outputs(this);
  }
}

export class CheckUpkeepCall__Inputs {
  _call: CheckUpkeepCall;

  constructor(call: CheckUpkeepCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CheckUpkeepCall__Outputs {
  _call: CheckUpkeepCall;

  constructor(call: CheckUpkeepCall) {
    this._call = call;
  }

  get upkeepNeeded(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }

  get value1(): Bytes {
    return this._call.outputValues[1].value.toBytes();
  }
}

export class CreatePoolCall extends ethereum.Call {
  get inputs(): CreatePoolCall__Inputs {
    return new CreatePoolCall__Inputs(this);
  }

  get outputs(): CreatePoolCall__Outputs {
    return new CreatePoolCall__Outputs(this);
  }
}

export class CreatePoolCall__Inputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get _entryFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreatePoolCall__Outputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }
}

export class DistributeRewardsCall extends ethereum.Call {
  get inputs(): DistributeRewardsCall__Inputs {
    return new DistributeRewardsCall__Inputs(this);
  }

  get outputs(): DistributeRewardsCall__Outputs {
    return new DistributeRewardsCall__Outputs(this);
  }
}

export class DistributeRewardsCall__Inputs {
  _call: DistributeRewardsCall;

  constructor(call: DistributeRewardsCall) {
    this._call = call;
  }

  get _poolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DistributeRewardsCall__Outputs {
  _call: DistributeRewardsCall;

  constructor(call: DistributeRewardsCall) {
    this._call = call;
  }
}

export class EnterPoolCall extends ethereum.Call {
  get inputs(): EnterPoolCall__Inputs {
    return new EnterPoolCall__Inputs(this);
  }

  get outputs(): EnterPoolCall__Outputs {
    return new EnterPoolCall__Outputs(this);
  }
}

export class EnterPoolCall__Inputs {
  _call: EnterPoolCall;

  constructor(call: EnterPoolCall) {
    this._call = call;
  }

  get _poolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class EnterPoolCall__Outputs {
  _call: EnterPoolCall;

  constructor(call: EnterPoolCall) {
    this._call = call;
  }
}

export class PerformUpkeepCall extends ethereum.Call {
  get inputs(): PerformUpkeepCall__Inputs {
    return new PerformUpkeepCall__Inputs(this);
  }

  get outputs(): PerformUpkeepCall__Outputs {
    return new PerformUpkeepCall__Outputs(this);
  }
}

export class PerformUpkeepCall__Inputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PerformUpkeepCall__Outputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetPoolDurationCall extends ethereum.Call {
  get inputs(): SetPoolDurationCall__Inputs {
    return new SetPoolDurationCall__Inputs(this);
  }

  get outputs(): SetPoolDurationCall__Outputs {
    return new SetPoolDurationCall__Outputs(this);
  }
}

export class SetPoolDurationCall__Inputs {
  _call: SetPoolDurationCall;

  constructor(call: SetPoolDurationCall) {
    this._call = call;
  }

  get _poolDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPoolDurationCall__Outputs {
  _call: SetPoolDurationCall;

  constructor(call: SetPoolDurationCall) {
    this._call = call;
  }
}

export class SetPoolEntryIntervalCall extends ethereum.Call {
  get inputs(): SetPoolEntryIntervalCall__Inputs {
    return new SetPoolEntryIntervalCall__Inputs(this);
  }

  get outputs(): SetPoolEntryIntervalCall__Outputs {
    return new SetPoolEntryIntervalCall__Outputs(this);
  }
}

export class SetPoolEntryIntervalCall__Inputs {
  _call: SetPoolEntryIntervalCall;

  constructor(call: SetPoolEntryIntervalCall) {
    this._call = call;
  }

  get _poolEntryInterval(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPoolEntryIntervalCall__Outputs {
  _call: SetPoolEntryIntervalCall;

  constructor(call: SetPoolEntryIntervalCall) {
    this._call = call;
  }
}

export class SetPoolStartIntervalCall extends ethereum.Call {
  get inputs(): SetPoolStartIntervalCall__Inputs {
    return new SetPoolStartIntervalCall__Inputs(this);
  }

  get outputs(): SetPoolStartIntervalCall__Outputs {
    return new SetPoolStartIntervalCall__Outputs(this);
  }
}

export class SetPoolStartIntervalCall__Inputs {
  _call: SetPoolStartIntervalCall;

  constructor(call: SetPoolStartIntervalCall) {
    this._call = call;
  }

  get _poolStartInterval(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPoolStartIntervalCall__Outputs {
  _call: SetPoolStartIntervalCall;

  constructor(call: SetPoolStartIntervalCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawFeesCall extends ethereum.Call {
  get inputs(): WithdrawFeesCall__Inputs {
    return new WithdrawFeesCall__Inputs(this);
  }

  get outputs(): WithdrawFeesCall__Outputs {
    return new WithdrawFeesCall__Outputs(this);
  }
}

export class WithdrawFeesCall__Inputs {
  _call: WithdrawFeesCall;

  constructor(call: WithdrawFeesCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawFeesCall__Outputs {
  _call: WithdrawFeesCall;

  constructor(call: WithdrawFeesCall) {
    this._call = call;
  }
}
